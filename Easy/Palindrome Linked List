/** 
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
import java.util.Stack;

class Solution {
    public boolean isPalindrome(ListNode head) {
        
        Stack<ListNode> stack = new Stack<>(); 
        ListNode current;
        current = head;
        
        while(current != null)
        {
            stack.push(current);
            current = current.next;
        }
        
        current = head;
        
        while(!stack.empty())
        {
            if(current.val == stack.pop().val)
            {
                current = current.next;
            }
            else
            {
                return false;
            }
        }
        
        return true;
    }
}
